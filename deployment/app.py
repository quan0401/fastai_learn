# AUTOGENERATED! DO NOT EDIT! File to edit: cat_classifier.ipynb.

# %% auto 0
__all__ = ['path', 'files', 'dls', 'learn', 'categories', 'label_func', 'image_classifier']

# %% cat_classifier.ipynb 1
from fastai.vision.all import ImageDataLoaders, URLs, untar_data, get_image_files, Resize, \
    vision_learner, resnet34, error_rate, default_device, load_learner, show_image, PILImage
import torch
%matplotlib inline

# %% cat_classifier.ipynb 3
path = untar_data(URLs.PETS)
path.ls()

# %% cat_classifier.ipynb 5
files = get_image_files(path/'images')

files[0]

# %% cat_classifier.ipynb 6
def label_func(fn:str): 
    return fn[0].isupper()

# %% cat_classifier.ipynb 7
dls = ImageDataLoaders.from_name_func(path/'images', fnames=files, label_func=label_func,
                                      item_tfms=Resize(224), device=default_device(1)) 

# %% cat_classifier.ipynb 9
learn = vision_learner(dls, resnet34, metrics=error_rate)
learn.fine_tune(1)

# %% cat_classifier.ipynb 12
import gradio as gr
categories = ('dog', 'cat')
def image_classifier(input): 
    pred, idx, probs = learn.predict(input) 
    result = dict(zip(categories, map(float, probs)))
    print('result', result)
    return result



gr.Interface(fn=image_classifier,
             inputs=gr.Image(type="pil"),
             outputs=gr.Label(),
             examples=['./cat.jpeg', './dog.jpg']).launch(share=True)
